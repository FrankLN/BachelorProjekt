@model List<WebApp.ViewModels.EpisodeViewModel>
@using WebApp.Helpers
@{
    ViewBag.Title = "Index";
}

<script src="~/Content/script/popupScript.js?v=2"></script>
<script src="~/Content/script/chartScript.js?v=2"></script>

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script src="http://code.highcharts.com/highcharts.js"></script>
<script src="http://code.highcharts.com/modules/data.js"></script>
<script src="http://code.highcharts.com/modules/exporting.js"></script>



@*<div class="ui-widget"
    style="float:right;
        display: table-cell;
        vertical-align: middle;
        height: 35px;">
    <label for="tags" style="padding-right:3px;">Search:</label>
    <input id="tags" type="text" onkeyup="search()" />
</div>*@
    <table>
        <thead>
            <tr>
                <th></th>
                <th title="@Html.ToolTipFor(m => Model.FirstOrDefault().EpisodeType)" class="dropdown">
                    @Html.LabelFor(model => Model.FirstOrDefault().EpisodeType)

                    <ul id="episodeCheck" class="dropdown-list">

                    </ul>
                </th>
                <th id="thTransmission" title="@Html.ToolTipFor(m => Model.FirstOrDefault().Transmissions)">@Html.LabelFor(model => Model.FirstOrDefault().Transmissions)  (@Model.FirstOrDefault().TotalTransmissions)</th>
                <th title="@Html.ToolTipFor(m => Model.FirstOrDefault().ProcentTransmission)">@Html.LabelFor(model => Model.FirstOrDefault().ProcentTransmission)</th>
            </tr>
        </thead>
        <tbody id="tableContent">
            @foreach (var typeModel in Model)
            {
                <tr class="trData">
                    <td class="graphInputButton"> <input type="image" class='graphButton' img src="~/Content/img/graph_icon.png" title="Show graph" onclick="overlay('@typeModel.EpisodeType','@typeModel.Transmissions')"></td>
                    <td class="episodeType">@Html.DisplayFor(modelItem => typeModel.EpisodeType)</td>
                    <td class="cellWithNumber">@Html.DisplayFor(modelItem => typeModel.Transmissions)</td>
                    <td class="cellWithNumber">@Html.DisplayFor(modelItem => typeModel.ProcentTransmission) %</td>
                </tr>
            }
        </tbody>
    </table>



<div id="overlay">
    <div>
        <a title="Close" onclick="overlay('close')" class="close">X</a>
        <div id="container" ></div>

        <table id="datatable" style="visibility:hidden">
            <thead id="graphHead">
            </thead>
            <tbody id="graphData">
            </tbody>
        </table>
    </div>
</div>
